services:
  cohort_management:
    command: ["sleep", "infinity"]

  db:
    image: postgres:13-alpine
    volumes: []
    environment:
      POSTGRES_DB: testdb
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${DB_NAME}", "-U", "${DB_USER}"]

  app-tests:
    build:
      context: .
      dockerfile: backend/cohort_management/docker/Dockerfile
      args:
        INSTALL_TEST_REQUIREMENTS: "true"
    command: ["pytest",  "--tb=short", "--disable-warnings", "-q", "--log-cli-level=WARNING"]
    environment:
      - PYTHONPATH=/cohort_management
      - ENV_STATE=test
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - db
      - init

  init:
    build:
      context: .
      dockerfile: backend/cohort_management/docker/init.dockerfile
    environment:
      - DATABASE_URL=postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@db/${DB_NAME}
      - DB_HOST=db
      - DB_USER=${DB_USER}
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${DB_NAME}", "-U", "${DB_USER}"]
      interval: 10s
      retries: 10
      start_period: 30s
      timeout: 5s

